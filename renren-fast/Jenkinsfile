pipeline {
  agent {
    node {
      label 'maven'
    }
  }
    parameters {
          string(name:'PROJECT_VERSION',defaultValue: 'v0.0Beta',description:'')
          string(name:'PROJECT_NAME',defaultValue: '',description:'')
    }

    environment {
        DOCKER_CREDENTIAL_ID = 'dockerhub-id'
        GITHUB_CREDENTIAL_ID = 'github-id'
        KUBECONFIG_CREDENTIAL_ID = 'demo-kubeconfig'
        REGISTRY = 'docker.io'
        DOCKERHUB_NAMESPACE = 'zyydockerhub'
        GITHUB_ACCOUNT = 'zcloudz123'
        SONAR_CREDENTIAL_ID = 'sonar-token'
        BRANCH_NAME = 'master'
    }

    stages {
      stage('git拉取代码') {
        steps {
          git(credentialsId: 'github-id', url: 'https://github.com/zcloudz123/gulimall.git', branch: 'master', changelog: true, poll: false)
          sh 'echo 正在构建： $PROJECT_NAME  版本号：$PROJECT_VERSION'
        }
      }
    stage('sonarqube analysis') {
      steps {
        container ('maven') {
          withCredentials([string(credentialsId: "$SONAR_CREDENTIAL_ID", variable: 'SONAR_TOKEN')]) {
            withSonarQubeEnv('sonar') {
              sh "echo 当前目录 `pwd`"
              sh "mvn sonar:sonar -gs `pwd`/gulimall/mvn-settings.xml -Dsonar.branch=$BRANCH_NAME -Dsonar.login=$SONAR_TOKEN"
            }
          }
          timeout(time: 1, unit: 'HOURS') {
            waitForQualityGate abortPipeline: true
          }
        }
      }
    }
    }
}